version: '3.8'

services:
  # MongoDB Database - Production
  mongodb:
    image: mongo:6.0
    container_name: mealloop-mongo-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_prod_data:/data/db
    networks:
      - mealloop-prod-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Production
  redis:
    image: redis:7-alpine
    container_name: mealloop-redis-prod
    restart: always
    volumes:
      - redis_prod_data:/data
    networks:
      - mealloop-prod-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Backend Service - Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mealloop-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: ${MONGO_URI}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
      REDIS_URL: redis://redis:6379
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    volumes:
      - backend_prod_uploads:/app/public/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - mealloop-prod-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Frontend Service - Production
  frontend:
    build:
      context: ./frontend/mealloop
      dockerfile: Dockerfile
    container_name: mealloop-frontend-prod
    restart: always
    depends_on:
      - backend
    networks:
      - mealloop-prod-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mealloop-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - mealloop-prod-network
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

volumes:
  mongodb_prod_data:
    driver: local
  redis_prod_data:
    driver: local
  backend_prod_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  mealloop-prod-network:
    driver: bridge